
import java.beans.PropertyVetoException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Color;
import java.io.*;
import java.sql.PreparedStatement;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author MarioPC
 */
public class Radnik extends javax.swing.JInternalFrame {

    /**
     * Creates new form Radnik
     */
    public Radnik() {
        initComponents();
        vrijeme();
        
              
    }
   /* private void proba() throws SQLException
    {
        try { 
         String url = "jdbc:derby://localhost:1527/testBaza";
            String username = "test";
            String password = "test";

            Connection con = DriverManager.getConnection(url,username,password);
            Statement stmt = con.createStatement();
            String text = nazivTrgRacun.getText() + "_Racuni";
                String SQL = "CREATE TABLE "+text+" " +
                   "(datum VARCHAR(255), " + 
                   " iznos VARCHAR(255))"; 
                stmt.execute (SQL);
     
            
        } catch (SQLException ex) {
            Logger.getLogger(Radnik.class.getName()).log(Level.SEVERE, null, ex);
        }
   
    }  */ 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jedan = new javax.swing.JButton();
        dva = new javax.swing.JButton();
        tri = new javax.swing.JButton();
        cetiri = new javax.swing.JButton();
        pet = new javax.swing.JButton();
        sedam = new javax.swing.JButton();
        osam = new javax.swing.JButton();
        sest = new javax.swing.JButton();
        devet = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        nula = new javax.swing.JButton();
        tocka = new javax.swing.JButton();
        racunPanel = new javax.swing.JPanel();
        ukupno = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        racunTablica = new javax.swing.JTable();
        nazivTrgRacun = new javax.swing.JLabel();
        adresaTrgRacun = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        radnikLabel = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        brRacun = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        datumRacun = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        vrijemeRacun = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        zaVratiti = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        placeno = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        scanBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        barArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        kolArea = new javax.swing.JTextArea();
        plus = new javax.swing.JButton();
        minus = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        kupon = new javax.swing.JButton();
        print = new javax.swing.JButton();
        vrijeme = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setMaximizable(true);
        setMaximumSize(new java.awt.Dimension(651655, 46456));
        setPreferredSize(new java.awt.Dimension(1350, 650));

        jPanel6.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        jPanel6.setPreferredSize(new java.awt.Dimension(400, 400));
        jPanel6.setRequestFocusEnabled(false);

        jedan.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jedan.setText("1");
        jedan.setMaximumSize(new java.awt.Dimension(100, 100));
        jedan.setMinimumSize(new java.awt.Dimension(100, 100));
        jedan.setPreferredSize(new java.awt.Dimension(100, 100));
        jedan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jedanActionPerformed(evt);
            }
        });

        dva.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        dva.setText("2");
        dva.setMaximumSize(new java.awt.Dimension(100, 100));
        dva.setMinimumSize(new java.awt.Dimension(100, 100));
        dva.setPreferredSize(new java.awt.Dimension(100, 100));
        dva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dvaActionPerformed(evt);
            }
        });

        tri.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        tri.setText("3");
        tri.setMaximumSize(new java.awt.Dimension(100, 100));
        tri.setMinimumSize(new java.awt.Dimension(100, 100));
        tri.setPreferredSize(new java.awt.Dimension(100, 100));
        tri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                triActionPerformed(evt);
            }
        });

        cetiri.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        cetiri.setText("4");
        cetiri.setToolTipText("");
        cetiri.setMaximumSize(new java.awt.Dimension(100, 100));
        cetiri.setMinimumSize(new java.awt.Dimension(100, 100));
        cetiri.setPreferredSize(new java.awt.Dimension(100, 100));
        cetiri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cetiriActionPerformed(evt);
            }
        });

        pet.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        pet.setText("5");
        pet.setMaximumSize(new java.awt.Dimension(100, 100));
        pet.setMinimumSize(new java.awt.Dimension(100, 100));
        pet.setPreferredSize(new java.awt.Dimension(100, 100));
        pet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                petActionPerformed(evt);
            }
        });

        sedam.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        sedam.setText("7");
        sedam.setMaximumSize(new java.awt.Dimension(100, 100));
        sedam.setMinimumSize(new java.awt.Dimension(100, 100));
        sedam.setPreferredSize(new java.awt.Dimension(100, 100));
        sedam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sedamActionPerformed(evt);
            }
        });

        osam.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        osam.setText("8");
        osam.setMaximumSize(new java.awt.Dimension(100, 100));
        osam.setMinimumSize(new java.awt.Dimension(100, 100));
        osam.setPreferredSize(new java.awt.Dimension(100, 100));
        osam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                osamActionPerformed(evt);
            }
        });

        sest.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        sest.setText("6");
        sest.setMaximumSize(new java.awt.Dimension(100, 100));
        sest.setMinimumSize(new java.awt.Dimension(100, 100));
        sest.setPreferredSize(new java.awt.Dimension(100, 100));
        sest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sestActionPerformed(evt);
            }
        });

        devet.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        devet.setText("9");
        devet.setMaximumSize(new java.awt.Dimension(100, 100));
        devet.setMinimumSize(new java.awt.Dimension(100, 100));
        devet.setPreferredSize(new java.awt.Dimension(100, 100));
        devet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                devetActionPerformed(evt);
            }
        });

        delete.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        delete.setText("X");
        delete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        delete.setMaximumSize(new java.awt.Dimension(100, 100));
        delete.setMinimumSize(new java.awt.Dimension(100, 100));
        delete.setPreferredSize(new java.awt.Dimension(100, 100));
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        nula.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        nula.setText("0");
        nula.setMaximumSize(new java.awt.Dimension(100, 100));
        nula.setMinimumSize(new java.awt.Dimension(100, 100));
        nula.setPreferredSize(new java.awt.Dimension(100, 100));
        nula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nulaActionPerformed(evt);
            }
        });

        tocka.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        tocka.setText(".");
        tocka.setMaximumSize(new java.awt.Dimension(100, 100));
        tocka.setMinimumSize(new java.awt.Dimension(100, 100));
        tocka.setPreferredSize(new java.awt.Dimension(100, 100));
        tocka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tockaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jedan, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dva, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tri, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(cetiri, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pet, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sest, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(sedam, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(osam, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tocka, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(devet, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nula, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jedan, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dva, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tri, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cetiri, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pet, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sest, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(osam, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(devet, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sedam, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nula, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tocka, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5))
        );

        racunPanel.setBackground(new java.awt.Color(204, 204, 204));
        racunPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        ukupno.setEditable(false);
        ukupno.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        ukupno.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Ukupno");

        racunTablica.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Naziv artikla", "Cijena [kn]", "Količina [kom]", "Iznos [kn]"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        racunTablica.setShowHorizontalLines(false);
        racunTablica.setShowVerticalLines(false);
        racunTablica.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(racunTablica);
        if (racunTablica.getColumnModel().getColumnCount() > 0) {
            racunTablica.getColumnModel().getColumn(0).setResizable(false);
            racunTablica.getColumnModel().getColumn(1).setResizable(false);
            racunTablica.getColumnModel().getColumn(2).setResizable(false);
            racunTablica.getColumnModel().getColumn(3).setResizable(false);
        }

        nazivTrgRacun.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nazivTrgRacun.setText("Naziv trgovine");

        adresaTrgRacun.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        adresaTrgRacun.setText("Adresa trgovine");

        jLabel7.setText("Radnik:");

        radnikLabel.setText("ime radnika");

        jLabel9.setText("Racun broj:");

        brRacun.setText("1");

        jLabel11.setText("Datum:");

        datumRacun.setText("datum racuna");

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Vrijeme:");

        vrijemeRacun.setText("vrijeme racuna");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Plaćeno");

        zaVratiti.setEditable(false);
        zaVratiti.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        zaVratiti.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Za vratiti");

        placeno.setColumns(1);
        placeno.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        placeno.setRows(1);
        placeno.setAutoscrolls(false);
        placeno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                placenoMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(placeno);

        javax.swing.GroupLayout racunPanelLayout = new javax.swing.GroupLayout(racunPanel);
        racunPanel.setLayout(racunPanelLayout);
        racunPanelLayout.setHorizontalGroup(
            racunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addGroup(racunPanelLayout.createSequentialGroup()
                .addGroup(racunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nazivTrgRacun, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(adresaTrgRacun, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(racunPanelLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(racunPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(racunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, racunPanelLayout.createSequentialGroup()
                                .addGroup(racunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(racunPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(radnikLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                                        .addComponent(jLabel9))
                                    .addGroup(racunPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(datumRacun, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(racunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(vrijemeRacun, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(brRacun, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(racunPanelLayout.createSequentialGroup()
                                .addGroup(racunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(ukupno, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(59, 59, 59)
                                .addGroup(racunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                                    .addComponent(jScrollPane4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(racunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(zaVratiti, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );
        racunPanelLayout.setVerticalGroup(
            racunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(racunPanelLayout.createSequentialGroup()
                .addComponent(nazivTrgRacun)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(adresaTrgRacun)
                .addGap(26, 26, 26)
                .addGroup(racunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9)
                    .addComponent(brRacun)
                    .addComponent(radnikLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(racunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(racunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(datumRacun))
                    .addGroup(racunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(vrijemeRacun)
                        .addComponent(jLabel13)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(racunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(racunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(racunPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ukupno, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(zaVratiti, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        scanBtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        scanBtn.setText("Scan");
        scanBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scanBtnActionPerformed(evt);
            }
        });

        barArea.setColumns(1);
        barArea.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        barArea.setRows(1);
        barArea.setAutoscrolls(false);
        barArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                barAreaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(barArea);

        kolArea.setColumns(1);
        kolArea.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        kolArea.setRows(1);
        kolArea.setText("1");
        kolArea.setAutoscrolls(false);
        kolArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                kolAreaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(kolArea);

        plus.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        plus.setText("+");
        plus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusActionPerformed(evt);
            }
        });

        minus.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        minus.setText("-");
        minus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(scanBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(plus, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(minus, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(minus, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(plus))
                    .addComponent(scanBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {minus, plus});

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 153, 153), new java.awt.Color(204, 204, 204)));

        kupon.setText("Kupon");
        kupon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kuponActionPerformed(evt);
            }
        });

        print.setText("Print");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        vrijeme.setBackground(new java.awt.Color(204, 204, 204));
        vrijeme.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        vrijeme.setText("datum");
        vrijeme.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Opcije");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(kupon, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(print, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(202, Short.MAX_VALUE)
                .addComponent(vrijeme, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(vrijeme, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kupon, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(print, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(racunPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(racunPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
     model=(DefaultTableModel) racunTablica.getModel();
    if(dovoljno == true)
       {
        String vrijeme = new SimpleDateFormat("HH:mm:ss").format(Calendar.getInstance().getTime());
        vrijemeRacun.setText(vrijeme);
        brRacunInt = Integer.parseInt(brRacun.getText());
        brRacunInt ++;
        brRacun.setText(String.valueOf(brRacunInt));
        JOptionPane.showMessageDialog(null, "Uspiješno naplačeno!");
        updateRacun();
       }
       else
       {JOptionPane.showMessageDialog(null, "Nedovoljno novaca!");}
    }//GEN-LAST:event_printActionPerformed

    private void kuponActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kuponActionPerformed
                Kupon kupon = new Kupon();
                NewLogin.mainWindow.add(kupon);
                kupon.show();
               
    }//GEN-LAST:event_kuponActionPerformed

    private void scanBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scanBtnActionPerformed
        skeniranje();
       
    }//GEN-LAST:event_scanBtnActionPerformed

    private void barAreaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barAreaMouseClicked
                pressedBar = true;
                pressedKol = false;
                pressedPlac = false;
    }//GEN-LAST:event_barAreaMouseClicked

    private void kolAreaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kolAreaMouseClicked
               pressedKol = true; 
               pressedBar = false;
               pressedPlac = false;
    }//GEN-LAST:event_kolAreaMouseClicked

    private void jedanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jedanActionPerformed
        if(pressedKol == true)
          kolArea.append("1");  
   
        if(pressedBar == true)
            barArea.append("1");
        
         if(pressedPlac == true)
            placeno.append("1");
             vracanje();
    }//GEN-LAST:event_jedanActionPerformed

    private void dvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dvaActionPerformed
        if(pressedKol == true)
          kolArea.append("2");  
   
        if(pressedBar == true)
            barArea.append("2");
        
         if(pressedPlac == true)
            placeno.append("2");
             vracanje();
    }//GEN-LAST:event_dvaActionPerformed

    private void triActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_triActionPerformed
        if(pressedKol == true)
          kolArea.append("3");  
   
        if(pressedBar == true)
            barArea.append("3");
        
         if(pressedPlac == true)
            placeno.append("3");
             vracanje();
    }//GEN-LAST:event_triActionPerformed

    private void cetiriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cetiriActionPerformed
        if(pressedKol == true)
          kolArea.append("4");  
   
        if(pressedBar == true)
            barArea.append("4");
        
         if(pressedPlac == true)
            placeno.append("4");
             vracanje();
    }//GEN-LAST:event_cetiriActionPerformed

    private void petActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_petActionPerformed
        if(pressedKol == true)
          kolArea.append("5");  
   
        if(pressedBar == true)
            barArea.append("5");
        
         if(pressedPlac == true)
            placeno.append("5");
            vracanje();
    }//GEN-LAST:event_petActionPerformed

    private void sestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sestActionPerformed
        if(pressedKol == true)
          kolArea.append("6");  
   
        if(pressedBar == true)
            barArea.append("6");
        
         if(pressedPlac == true)
            placeno.append("6");
            vracanje();
    }//GEN-LAST:event_sestActionPerformed

    private void sedamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sedamActionPerformed
        if(pressedKol == true)
          kolArea.append("7");  
   
        if(pressedBar == true)
            barArea.append("7");
        
         if(pressedPlac == true)
            placeno.append("7");
             vracanje();
    }//GEN-LAST:event_sedamActionPerformed

    private void osamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_osamActionPerformed
        if(pressedKol == true)
          kolArea.append("8");  
   
        if(pressedBar == true)
            barArea.append("8");
        
         if(pressedPlac == true)
            placeno.append("8");
             vracanje();
    }//GEN-LAST:event_osamActionPerformed

    private void devetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_devetActionPerformed
        if(pressedKol == true)
          kolArea.append("9");  
   
        if(pressedBar == true)
            barArea.append("9");
        
         if(pressedPlac == true)
            placeno.append("9");
             vracanje();
    }//GEN-LAST:event_devetActionPerformed

    private void nulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nulaActionPerformed
        if(pressedKol == true)
          kolArea.append("0");  
   
        if(pressedBar == true)
            barArea.append("0");
        
        if(pressedPlac == true)
            placeno.append("0");
             vracanje();
        
    }//GEN-LAST:event_nulaActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        
        if(pressedKol == true)
            if(kolArea.getText().length() >= 0)
            { kolArea.setText(kolArea.getText().substring(0,kolArea.getText().length()-1));}
   
        if(pressedBar == true)
            if(barArea.getText().length() >= 0)
            {barArea.setText(barArea.getText().substring(0,barArea.getText().length()-1));}
        
        if(pressedPlac == true)
            if(placeno.getText().length() >= 0)
            {placeno.setText(placeno.getText().substring(0,placeno.getText().length()-1));
            vracanje();}
        
    }//GEN-LAST:event_deleteActionPerformed

    private void tockaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tockaActionPerformed
       if(pressedPlac == true)
            placeno.append(".");
                    vracanje();
    }//GEN-LAST:event_tockaActionPerformed

    private void plusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusActionPerformed
        int kolicinaArea;
        kolicinaArea = Integer.parseInt(kolArea.getText());
        kolicinaArea ++;
        kolArea.setText(String.valueOf(kolicinaArea));
    }//GEN-LAST:event_plusActionPerformed

    private void minusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusActionPerformed
        int kolicinaArea;
        kolicinaArea = Integer.parseInt(kolArea.getText());
        if(kolicinaArea <= 1)
            kolicinaArea = 1;
        else
        kolicinaArea --;
        
        kolArea.setText(String.valueOf(kolicinaArea));
    }//GEN-LAST:event_minusActionPerformed

    private void placenoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_placenoMouseClicked
               pressedPlac = true;
                pressedBar = false;
                pressedKol = false;     
    }//GEN-LAST:event_placenoMouseClicked

public void vrijeme()
{
Thread clock = new Thread()
{
public void run()
    {
        for(;;)
        {
            String timeStamp = new SimpleDateFormat("dd.MM.yyyy/HH:mm:ss").format(Calendar.getInstance().getTime());
            vrijeme.setText(timeStamp);
            try {
                sleep(1000);
              
            } catch (InterruptedException ex) {
                Logger.getLogger(Radnik.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        }
        }
    };
    clock.start();
}

public void upisPodatakaRacun(String userRacun) throws SQLException
{
    
    try{
            String url = "jdbc:derby://localhost:1527/testBaza";
            String username = "test";
            String password = "test";

            Connection con = DriverManager.getConnection(url,username,password);
            Statement stmt = con.createStatement();
            String sql="SELECT * FROM LISTARADNIKA WHERE KOR_IME = '"+userRacun+"'";
            ResultSet  rs=stmt.executeQuery(sql);

            while(rs.next())
                {
                    radnikLabel.setText(rs.getString("IMEPREZIME"));
                    trgovina = rs.getString("TRGOVINA");
                }
         
           
            String sql1 = "SELECT * FROM TRGOVINE WHERE NAZIV_TRG = '"+trgovina+"'";
            ResultSet rs1=stmt.executeQuery(sql1);
            while(rs1.next())
                {
                    nazivTrgRacun.setText(rs1.getString("NAZIV_TRG"));
                    adresaTrgRacun.setText(rs1.getString("ADRESA"));
                    brRacun.setText(rs1.getString("BROJ_RACUNA"));
                }
            }  
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
    
            String datum = new SimpleDateFormat("dd.MM.yyyy").format(Calendar.getInstance().getTime());
            String sat = new SimpleDateFormat("HH:mm:ss").format(Calendar.getInstance().getTime());
            datumRacun.setText(datum);
            vrijemeRacun.setText(sat);
            
         
}
public void tabla()
{
    
    
    model=(DefaultTableModel) racunTablica.getModel();
    
     try
        {
            String url = "jdbc:derby://localhost:1527/testBaza";
            String username = "test";
            String password = "test";
            String nazivSkladista = nazivTrgRacun.getText() + "_PROIZVOD";
            Connection con = DriverManager.getConnection(url,username,password);
            Statement stmt = con.createStatement();
           // String sql="UPDATE "+nazivSkladista+" SET KOLICINA = '"+ukupnaKolicina+"' WHERE BAR_KOD = '"+barArea.getText()+"' ";
            String sql1="SELECT * FROM "+nazivSkladista+" WHERE BAR_KOD = '"+barArea.getText().trim()+"' ";
            ResultSet  rs=stmt.executeQuery(sql1);    
            //stmt.executeQuery(sql); 
            if(rs.next())
            {
                nazivTab = rs.getString("NAZIV");
                cijenaTab = String.valueOf(cijena);
                ukupnaTab = String.valueOf(iznos);
                kolicinaTab = String.valueOf(kol);
  //  nazivTab = barScan;
    
                 model.addRow(new Object[] {nazivTab, cijenaTab, kolicinaTab, ukupnaTab});
            }
     
 
    
       }

        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null, ex.toString());
        }
}

public void skeniranje()
   {
        try{
            String url = "jdbc:derby://localhost:1527/testBaza";
            String username = "test";
            String password = "test";
            String nazivTrg = nazivTrgRacun.getText() + "_PROIZVOD";
            Connection con = DriverManager.getConnection(url,username,password);
            Statement stmt = con.createStatement();
            String sql="SELECT * FROM "+nazivTrg+" WHERE BAR_KOD = '"+barArea.getText()+"'";
            ResultSet  rs=stmt.executeQuery(sql);
            if(rs.next())
            {
                cijena = Float.parseFloat(rs.getString("CIJENA"));
                barScan = rs.getString("NAZIV");
                int kolicinaProizvoda = rs.getInt("KOLICINA");   
                kol = Integer.parseInt(kolArea.getText());
                if(kolicinaProizvoda > kol)
                { 
                    ukupnaKolicina = kolicinaProizvoda - kol;
                    iznos = kol * cijena;
                    update();
                    uk = uk + iznos;
                    ukupno.setText(String.format("%.2f",uk));
                    tabla();
                    barArea.setText(null);
                    kolArea.setText(null);  
                }
                else 
                     JOptionPane.showMessageDialog(null, "Nedovoljna kolicina proizvoda na stanju!");
            }
            else
            {JOptionPane.showMessageDialog(null, "Nepostojeći proizvod!");}
        }
     catch(SQLException ex)
        {JOptionPane.showMessageDialog(null, ex.toString());}
   }
private void updateRacun()
{
 try{
            String url = "jdbc:derby://localhost:1527/testBaza";
            String username = "test";
            String password = "test";
           
            Connection con = DriverManager.getConnection(url,username,password);
            Statement stmt = con.createStatement();
            String sql="UPDATE TRGOVINE SET BROJ_RACUNA = '"+brRacun.getText().trim()+"' WHERE NAZIV_TRG = '"+trgovina+"'";
            stmt.execute(sql);
            imeTrgBaza = nazivTrgRacun.getText() + "_RACUNI";
        
            System.out.println(imeTrgBaza.toUpperCase());
            String datum = new SimpleDateFormat("dd.MM.yyyy").format(Calendar.getInstance().getTime());
            String sql1="SELECT * FROM "+imeTrgBaza.toUpperCase()+"";
            stmt.execute(sql1);
            PreparedStatement  pstt=con.prepareStatement(sql1);
            ResultSet  rst=pstt.executeQuery();
                System.out.println("NEXT");
                //datumRac = null;
            while(rst.next())
            {    
                 datumRac = rst.getString("DATUM");
                  ukupanIznosRac = Float.parseFloat(rst.getString("IZNOS"));
                 if(datumRac == null)
                 {
                     System.out.println("NEXT1");
                     datumRac = datum;
                 }
                 else
                 {  
                     datumRac = datum;
                    if (datumRac.equals(datum))
                    {
                        System.out.println(datumRac+"N!!!!!!!!!!!113eqe!#EXT1");
                        ukupnoDan = ukupanIznosRac + Float.parseFloat(ukupno.getText().trim());
                        String sql2="UPDATE "+imeTrgBaza.toUpperCase()+" SET  IZNOS = '"+ukupnoDan+"' WHERE DATUM = '"+datum+"'";
                        stmt.execute(sql2);
                    }
                    else
                    {

                        String sql2="INSERT INTO "+imeTrgBaza.toUpperCase()+"  (DATUM,IZNOS) VALUES "
                        + "('"+datum+"' ,  '"+ukupno.getText().trim()+"' )";
                        stmt.execute(sql2);
                    }
                 }
                
            }
                  System.out.println(datumRac);
        
            System.out.println(datum);
            System.out.println(datumRac);
            System.out.println(ukupanIznosRac);
            
            model.setRowCount(0);
          
            ukupno.setText(null);
            placeno.setText(null);
            zaVratiti.setText(null);
            uk = 0;
 }
 catch (SQLException ex)
        {
            JOptionPane.showMessageDialog(null, ex.toString());
        }

}

private void update()
    {
         try
        {
            String url = "jdbc:derby://localhost:1527/testBaza";
            String username = "test";
            String password = "test";
            String nazivSkladista = nazivTrgRacun.getText() + "_PROIZVOD";
            Connection con = DriverManager.getConnection(url,username,password);
            Statement stmt = con.createStatement();
            String sql="UPDATE "+nazivSkladista+" SET KOLICINA = '"+ukupnaKolicina+"' WHERE BAR_KOD = '"+barArea.getText()+"' ";
            stmt.execute(sql);      
        }

        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null, ex.toString());
        }

    }

private void vracanje()
{
    placenoNovac = Float.parseFloat(placeno.getText().trim());
    zaVratitiNovac = placenoNovac - uk;
    zaVratiti.setText(String.format("%.2f", zaVratitiNovac));
    if(zaVratitiNovac < 0)
       {  zaVratiti.setForeground(Color.red);
              dovoljno = false;}
    
    if(zaVratitiNovac > 0)
    {zaVratiti.setForeground(Color.green);
        dovoljno = true;}
    if(zaVratitiNovac == 0)
        zaVratiti.setForeground(Color.black);
         
    

}
//================================================================================================================================================
//============================================================== SKENIRANJE ======================================================================
//================================================================================================================================================
    public float cijena;
    public String barScan;
    public int ukupnaKolicina;
    public float iznos;
    public int kol;
    public float uk;
    public String nazivTab;
    public String kolicinaTab;
    public String ukupnaTab;
    public String cijenaTab;
//================================================================================================================================================
//================================================================================================================================================
//================================================================================================================================================
    public int brRacunInt;
    public String trgovina;
    public String zaRacun;
    public boolean vrijemee = false;
    public String datumRac;
    public float ukupanIznosRac;
    private float ukupnoDan;
    public String imeTrgBaza;
    
    public boolean pressedBar = false;
    public boolean pressedKol = false;
    private boolean pressedPlac = false;
    
    private float placenoNovac;
    private float zaVratitiNovac;
    private boolean dovoljno = false;

    private DefaultTableModel model;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel adresaTrgRacun;
    private javax.swing.JTextArea barArea;
    private javax.swing.JLabel brRacun;
    private javax.swing.JButton cetiri;
    private javax.swing.JLabel datumRacun;
    private javax.swing.JButton delete;
    private javax.swing.JButton devet;
    private javax.swing.JButton dva;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jedan;
    private javax.swing.JTextArea kolArea;
    private javax.swing.JButton kupon;
    private javax.swing.JButton minus;
    private javax.swing.JLabel nazivTrgRacun;
    private javax.swing.JButton nula;
    private javax.swing.JButton osam;
    private javax.swing.JButton pet;
    private javax.swing.JTextArea placeno;
    private javax.swing.JButton plus;
    private javax.swing.JButton print;
    private javax.swing.JPanel racunPanel;
    public javax.swing.JTable racunTablica;
    private javax.swing.JLabel radnikLabel;
    private javax.swing.JButton scanBtn;
    private javax.swing.JButton sedam;
    private javax.swing.JButton sest;
    private javax.swing.JButton tocka;
    private javax.swing.JButton tri;
    public javax.swing.JTextField ukupno;
    private javax.swing.JLabel vrijeme;
    private javax.swing.JLabel vrijemeRacun;
    public javax.swing.JTextField zaVratiti;
    // End of variables declaration//GEN-END:variables
}
